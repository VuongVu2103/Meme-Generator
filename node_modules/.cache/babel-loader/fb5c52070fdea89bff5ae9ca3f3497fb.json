{"ast":null,"code":"var _jsxFileName = \"/Users/vuongvu/my-app/src/components/MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randMemeImg = this.state.allMemeImgs[randNum].url;\n    this.setState({\n      randomImg: randMemeImg\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"topText\",\n          type: \"text\",\n          placeholder: \"Top Text\",\n          value: this.state.topText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"bottomText\",\n          type: \"text\",\n          placeholder: \"Bottom Text\",\n          value: this.state.bottomText,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top\",\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom\",\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/vuongvu/my-app/src/components/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","handleSubmit","componentDidMount","fetch","then","response","json","memes","data","setState","event","name","value","target","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\nclass MemeGenerator extends Component{\n    constructor() {\n        super()\n        this.state={\n            topText: \"\",\n            bottomText:\"\",\n            randomImg:\"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    componentDidMount(){\n        fetch(\"https://api.imgflip.com/get_memes\")\n        .then(response => response.json())\n        .then(response =>{\n            const {memes} = response.data\n            this.setState({allMemeImgs: memes})\n        })\n    }\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n    handleSubmit(event){\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg =  this.state.allMemeImgs[randNum].url\n        this.setState({ randomImg: randMemeImg})\n    }\n    render(){\n        return(\n            <div>\n                    <form className=\"meme-form\" onSubmit={this.handleSubmit} >\n                            <input \n                                    name=\"topText\"\n                                    type= \"text\"\n                                    placeholder=\"Top Text\" \n                                    value={this.state.topText}\n                                    onChange={this.handleChange}\n                                    />\n                            <input \n                                    name=\"bottomText\"\n                                    type=\"text\"\n                                    placeholder=\"Bottom Text\"\n                                    value={this.state.bottomText}\n                                    onChange={this.handleChange}\n                                    />\n                        <button >Gen</button>\n                    </form>\n                    <div className=\"meme\">\n                        <img src={this.state.randomImg} alt=\"\" />\n                        <h2 className=\"top\">{this.state.topText}</h2>\n                        <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default MemeGenerator\n"]},"metadata":{},"sourceType":"module"}